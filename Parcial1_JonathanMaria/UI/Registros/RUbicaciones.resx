<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MyErrorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>